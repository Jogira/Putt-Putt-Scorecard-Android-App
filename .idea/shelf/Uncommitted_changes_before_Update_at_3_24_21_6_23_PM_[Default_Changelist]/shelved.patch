Index: app/src/main/java/com/example/minigolfapp/AddPlayersActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.minigolfapp;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.animation.Animation;\nimport android.view.animation.AnimationUtils;\nimport android.widget.Button;\nimport android.widget.ImageButton;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.gridlayout.widget.GridLayout;\n\nimport com.opencsv.CSVWriter;\n\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.Locale;\n\nimport de.hdodenhof.circleimageview.CircleImageView;\n\n\npublic class AddPlayersActivity extends AppCompatActivity {\n        private static final String TAG = \"AddPlayersActivity\";\n        private String mTimeStamp = new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.US).format(new Date());\n        private GridLayout playerSelectionContentView;\n        private ArrayList<Boolean> flipped = new ArrayList<>();\n        private ArrayList<Player> players;\n        private int numPlayers = 0;\n\n\n        @Override\n        protected void onCreate(Bundle savedInstanceState) {\n                super.onCreate(savedInstanceState);\n                setContentView(R.layout.add_players);\n                Game.currentGame = null;\n                Button backX = findViewById(R.id.backX);\n                Button createGame = findViewById(R.id.createGameButton);\n                ImageButton additionalPlayers = findViewById(R.id.newPlayerButton);\n                ImageButton home = findViewById(R.id.homePageButton);\n                ImageButton statsPage = findViewById(R.id.statsPageButton);\n                CircleImageView settingsPage = findViewById(R.id.settingsPageButton);\n                playerSelectionContentView = findViewById(R.id.playerSelectionContentView);\n                players = new ArrayList<>();\n\n                backX.setOnClickListener(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View view) {\n                                goBackPage();\n                        }\n                });\n\n                additionalPlayers.setOnClickListener(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View view) {\n                                AnimationController.buttonPress(AddPlayersActivity.this, view);\n\n                        }\n                });\n\n\n                createGame.setOnClickListener(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View view) {\n                                AnimationController.buttonPressSubtle(AddPlayersActivity.this, view);\n                                if(numPlayers < 1){\n                                        //toast\n                                        System.out.println(\"***************************************************************************************\");\n                                        Context context = getApplicationContext();\n                                        CharSequence text = \"Must select at least one player to create game\";\n                                        int duration = Toast.LENGTH_SHORT;\n\n                                        Toast toast = Toast.makeText(context, text, duration);\n                                        toast.show();\n                                }else{\n                                        openPointsPage();\n                                }\n\n                        }\n                });\n\n                home.setOnClickListener(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View view) {\n                                goBackPage();\n                        }\n                });\n\n                statsPage.setOnClickListener(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View view) {\n                                toStatsPage();\n                        }\n                });\n\n                settingsPage.setOnClickListener(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View view) {\n                                toSettingsPage();\n                        }\n                });\n                populateProfileView();\n        }\n\n        private String createNewFile() {\n                String directory = \"/scores\";\n                String timestamped = mTimeStamp;\n\n                StringBuilder header = new StringBuilder();\n                header.append(\"Hole,Sean\\n\");\n\n//                for(int i = 0; i < Game.currentGame.getPlayers().size(); i++){\n//                        header.append(Game.currentGame.getPlayers().get(i));\n//                        if(i < Game.currentGame.getPlayers().size()-1)\n//                                header.append(\",\");\n//                }\n\n                Log.d(TAG, \"Please lemme know what is happening here?\");\n                try {\n                        FileOutputStream out = openFileOutput(\"score\"+ timestamped + \".csv\", Context.MODE_PRIVATE);\n                        out.write(header.toString().getBytes());\n                        out.close();\n//            CSVWriter writer = new CSVWriter(new FileWriter(\"score\" + timestamped + \".csv\"));\n//            List<String[]> h = new ArrayList<>();\n//            String[] header = new String[]{\"hole\", \"Sean\"};\n//            h.add(header);\n//            Log.d(TAG, \"Please lemme know what is happening here?\");\n//            writer.writeAll(h);\n//            writer.close();\n                } catch (IOException e) {\n                        e.printStackTrace();\n                }\n                return (\"score\" + timestamped + \".csv\");\n        }\n\n        private void goBackPage() {\n                Intent homePage = new Intent(this, MainActivity.class);\n                startActivity(homePage);\n                this.overridePendingTransition(R.anim.new_page_no_anim, R.anim.slide_down);\n        }\n\n        private void toStatsPage() {\n                Intent statsScreen = new Intent(this, StatsActivity.class);\n                startActivity(statsScreen);\n                this.overridePendingTransition(R.anim.fade_out, R.anim.fade_in);\n        }\n\n        private void toSettingsPage() {\n                Intent settingsScreen = new Intent(this, SettingsActivity.class);\n                startActivity(settingsScreen);\n                this.overridePendingTransition(R.anim.fade_out, R.anim.fade_in);\n        }\n\n        private void openPointsPage() {\n                Intent addPointsPage = new Intent(this, AddPointsActivity.class);\n                Game.currentGame = new Game(players, 18, \"score\" + mTimeStamp + \".csv\");\n                createNewFile();\n                startActivity(addPointsPage);\n                this.overridePendingTransition(R.anim.slide_in_from_right, R.anim.slide_out_to_left);\n        }\n\n        //create and add profile views dynamically from saved profiles\n        //currently creates views from DEMO profiles made in MainActivity\n        private void populateProfileView() {\n                LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n                params.setMargins(75, 0, 75, 45);\n                playerSelectionContentView.setColumnCount(3);\n                int index = 0;\n\n                for (Player p : Player.players) {\n                        View exampleProfile = View.inflate(this, R.layout.player_profile_view, null);\n                        TextView nameView = exampleProfile.findViewById(R.id.playerNameView);\n                        final CircleImageView profilePictureView = exampleProfile.findViewById(R.id.playerImageView);\n                        nameView.setText(p.getName());\n                        profilePictureView.setImageDrawable(p.getPlayerProfileImage());\n\n                        profilePictureView.setTag(index);\n                        profilePictureView.setOnClickListener(new View.OnClickListener() {\n                                @Override\n                                public void onClick(View view) {\n                                        flipPlayerIcon((CircleImageView) view);\n                                        playAnimation(profilePictureView, R.anim.button_press_in, 0);\n                                        playAnimation(profilePictureView, R.anim.button_press_out, 100);\n                                }\n                        });\n                        playerSelectionContentView.addView(exampleProfile, index, params);\n                        flipped.add(false);\n                        index++;\n                }\n\n\n        }\n\n        private void playAnimation(final View v, final int animationId, int delayMS) {\n                if (v != null) {\n                        new Handler().postDelayed(new Runnable() {\n                                @Override\n                                public void run() {\n                                        Animation animation = AnimationUtils.loadAnimation(AddPlayersActivity.this, animationId);\n                                        animation.setDuration(animation.getDuration());\n                                        animation.setFillAfter(true);\n                                        v.startAnimation(animation);\n                                }\n                        }, delayMS);\n                }\n        }\n\n        private void flipPlayerIcon(CircleImageView v) {\n                int buttonIndex = (int) v.getTag();\n\n                if (!flipped.get(buttonIndex)) {\n                        v.setImageResource(R.drawable.ic_checked_profile);\n                        flipped.set(buttonIndex, true);\n                        players.add(Player.players.get(buttonIndex));\n                        numPlayers++;\n\n                } else {\n                        v.setImageDrawable(Player.players.get(buttonIndex).getPlayerProfileImage());\n                        flipped.set(buttonIndex, false);\n                        players.remove(Player.players.get(buttonIndex));\n                        numPlayers--;\n                }\n        }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/minigolfapp/AddPlayersActivity.java	(revision be26a5dcbaa90984c4746d17f57e7f39407f7921)
+++ app/src/main/java/com/example/minigolfapp/AddPlayersActivity.java	(date 1616617476000)
@@ -73,16 +73,15 @@
                         @Override
                         public void onClick(View view) {
                                 AnimationController.buttonPressSubtle(AddPlayersActivity.this, view);
-                                if(numPlayers < 1){
-                                        //toast
-                                        System.out.println("***************************************************************************************");
+                                if(numPlayers < 1) {
                                         Context context = getApplicationContext();
                                         CharSequence text = "Must select at least one player to create game";
                                         int duration = Toast.LENGTH_SHORT;
 
                                         Toast toast = Toast.makeText(context, text, duration);
                                         toast.show();
-                                }else{
+                                }
+                                else {
                                         openPointsPage();
                                 }
 
Index: app/src/main/res/layout/scorecard_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#141414\"\n    tools:context=\".ScorecardActivity\">\n\n    <ScrollView\n        android:id=\"@+id/scorecardScrollView\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"10dp\"\n        android:layout_marginTop=\"10dp\"\n        android:layout_marginEnd=\"10dp\"\n        android:background=\"@drawable/rounded_background\"\n        android:backgroundTint=\"@color/colorSecondaryDark\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/exitScorecardButton\">\n\n        <LinearLayout\n            android:id=\"@+id/scorecardScrollViewContent\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_margin=\"10dp\"\n            android:orientation=\"vertical\">\n\n            <TextView\n                android:id=\"@+id/holeTitleTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginStart=\"11dp\"\n                android:layout_marginTop=\"3dp\"\n                android:text=\"Hole 1\"\n                android:textColor=\"#ffffff\"\n                android:textSize=\"24sp\"\n                android:textStyle=\"bold\" />\n\n            <SeekBar\n                android:id=\"@+id/holeSeekBar\"\n                style=\"@style/Widget.AppCompat.SeekBar\"\n                android:layout_width=\"285dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"1dp\"\n                android:max=\"18\"\n                android:progress=\"0\"\n                android:progressDrawable=\"@drawable/seekbar\"\n                android:thumb=\"@drawable/ic_golfball\"\n                android:tickMark=\"@drawable/tickmark\" />\n\n            <TextView\n                android:id=\"@+id/scorecardScoreTitle\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"2dp\"\n                android:layout_marginEnd=\"10dp\"\n                android:text=\"Score\"\n                android:textAlignment=\"textEnd\"\n                android:textColor=\"#ffffff\"\n                android:textSize=\"26sp\"\n                android:textStyle=\"bold\" />\n\n            <LinearLayout\n                android:id=\"@+id/scorecardPlayerView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginEnd=\"2dp\"\n                android:orientation=\"vertical\"></LinearLayout>\n\n        </LinearLayout>\n    </ScrollView>\n\n    <Button\n        android:id=\"@+id/exitScorecardButton\"\n        style=\"@style/Widget.AppCompat.Button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"25dp\"\n        android:layout_marginEnd=\"10dp\"\n        android:background=\"@drawable/rounded_background\"\n        android:text=\"Done\"\n        android:textAllCaps=\"false\"\n        android:textColor=\"#ffffff\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <Button\n        android:id=\"@+id/scorecardEditButton\"\n        style=\"@style/Widget.AppCompat.Button.Borderless\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"10dp\"\n        android:layout_marginTop=\"25dp\"\n        android:background=\"@drawable/rounded_background\"\n        android:backgroundTint=\"@color/colorTertiaryDark\"\n        android:text=\"Edit\"\n        android:textAllCaps=\"false\"\n        android:textColor=\"#ffffff\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/scorecard_activity.xml	(revision be26a5dcbaa90984c4746d17f57e7f39407f7921)
+++ app/src/main/res/layout/scorecard_activity.xml	(date 1616624267000)
@@ -27,34 +27,68 @@
             android:layout_margin="10dp"
             android:orientation="vertical">
 
-            <TextView
-                android:id="@+id/holeTitleTextView"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginStart="11dp"
-                android:layout_marginTop="3dp"
-                android:text="Hole 1"
-                android:textColor="#ffffff"
-                android:textSize="24sp"
-                android:textStyle="bold" />
+            <LinearLayout
+                android:id="@+id/scorecardTopBar"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/rounded_background"
+                android:backgroundTint="@color/colorTertiaryDark"
+                android:orientation="vertical"
+                android:paddingBottom="8dp">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="horizontal"
+                    android:weightSum="1">
+
+                    <TextView
+                        android:id="@+id/holeTitleTextView"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_marginStart="14dp"
+                        android:layout_marginTop="5dp"
+                        android:layout_weight="0.85"
+                        android:paddingBottom="5dp"
+                        android:text="Hole 1"
+                        android:textColor="#ffffff"
+                        android:textSize="24sp"
+                        android:textStyle="bold" />
 
-            <SeekBar
-                android:id="@+id/holeSeekBar"
-                style="@style/Widget.AppCompat.SeekBar"
-                android:layout_width="285dp"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="1dp"
-                android:max="18"
-                android:progress="0"
-                android:progressDrawable="@drawable/seekbar"
-                android:thumb="@drawable/ic_golfball"
-                android:tickMark="@drawable/tickmark" />
+                    <Button
+                        android:id="@+id/viewTotalsButton"
+                        android:layout_width="wrap_content"
+                        android:layout_height="match_parent"
+                        android:layout_marginTop="10dp"
+                        android:layout_marginEnd="10dp"
+                        android:layout_weight="0.15"
+                        android:background="@drawable/rounded_background"
+                        android:backgroundTint="#5F5F5F"
+                        android:text="View Totals"
+                        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+                        android:textColor="#ffffff"
+                        android:textStyle="bold" />
+                </LinearLayout>
+
+                <SeekBar
+                    android:id="@+id/holeSeekBar"
+                    style="@style/Widget.AppCompat.SeekBar"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginHorizontal="5dp"
+                    android:layout_marginTop="8dp"
+                    android:max="18"
+                    android:progress="0"
+                    android:progressDrawable="@drawable/seekbar"
+                    android:thumb="@drawable/ic_golfball"
+                    android:tickMark="@drawable/tickmark" />
+            </LinearLayout>
 
             <TextView
                 android:id="@+id/scorecardScoreTitle"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:layout_marginTop="2dp"
+                android:layout_marginTop="8dp"
                 android:layout_marginEnd="10dp"
                 android:text="Score"
                 android:textAlignment="textEnd"
@@ -100,4 +134,5 @@
         android:textColor="#ffffff"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/minigolfapp/ScoreCardActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.minigolfapp;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.annotation.SuppressLint;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.LinearLayout;\nimport android.widget.SeekBar;\nimport android.widget.TextView;\n\nimport java.io.BufferedReader;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\nimport de.hdodenhof.circleimageview.CircleImageView;\n\npublic class ScoreCardActivity extends AppCompatActivity {\n\n    private static final String TAG = \"ScoreCardActivity\";\n    int currentHole = Game.currentGame.getCurrentHole();\n    private String filename;\n    private final ArrayList<Player> players = Game.currentGame.getPlayers();\n    private boolean inEditMode = false;\n    private LinearLayout scorecard;\n    private TextView holeNumberView;\n    private boolean gameFinished;\n\n\n    @SuppressLint(\"SetTextI18n\")\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.scorecard_activity);\n\n        filename = Game.currentGame.getFileName();\n        final Button scoreCardEditButton = findViewById(R.id.scorecardEditButton);\n        final Button doneButton = findViewById(R.id.exitScorecardButton);\n        scorecard = findViewById(R.id.scorecardPlayerView);\n        holeNumberView = findViewById(R.id.holeTitleTextView);\n        SeekBar holeSeekBar = findViewById(R.id.holeSeekBar);\n        holeSeekBar.setMax(Game.currentGame.getNumHoles());\n\n        gameFinished = getIntent().getBooleanExtra(\"gameFinished\", false);\n        holeNumberView.setText(\"Hole \" + currentHole);\n\n        if(Game.currentGame.getCurrentHole() == Game.currentGame.getNumHoles()) {\n            Game.currentGame.setCurrentHole(Game.currentGame.getCurrentHole()+1);\n            currentHole = Game.currentGame.getCurrentHole();\n            holeNumberView.setText(\"Total\");\n        }\n\n        holeSeekBar.setProgress(currentHole-1);\n\n        holeSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {\n            @Override\n            public void onProgressChanged(SeekBar seekBar, int i, boolean b) {\n\n                if (i < Game.currentGame.getNumHoles())\n                    holeNumberView.setText(\"Hole \" + (i + 1));\n                else\n                    holeNumberView.setText(\"Total\");\n            }\n\n            @Override\n            public void onStartTrackingTouch(SeekBar seekBar) {}\n\n            @Override\n            public void onStopTrackingTouch(SeekBar seekBar) {\n                currentHole = seekBar.getProgress() + 1;\n                updateScoreCard();\n            }\n        });\n\n        scoreCardEditButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                AnimationController.buttonPress(ScoreCardActivity.this, view);\n\n                if (inEditMode) {\n                    inEditMode = false;\n                    scoreCardEditButton.setText(\"Edit\");\n                    doneButton.setVisibility(View.VISIBLE);\n                }\n                else {\n                    inEditMode = true;\n                    scoreCardEditButton.setText(\"Editing\");\n                    doneButton.setVisibility(View.INVISIBLE);\n                }\n            }\n        });\n\n        doneButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                AnimationController.buttonPress(ScoreCardActivity.this, view);\n\n                if(gameFinished) {\n                    Intent homeScreen = new Intent(ScoreCardActivity.this, MainActivity.class);\n                    startActivity(homeScreen);\n                    ScoreCardActivity.this.overridePendingTransition(R.anim.new_page_no_anim, R.anim.slide_down);\n                }\n                else {\n                    Intent gameScreen = new Intent(ScoreCardActivity.this, AddPointsActivity.class);\n                    startActivity(gameScreen);\n                    ScoreCardActivity.this.overridePendingTransition(R.anim.new_page_no_anim, R.anim.slide_down);\n                }\n            }\n        });\n\n        populateScoreCardView();\n        updateScoreCard();\n    }\n\n\n    public void updateScoreCard() {\n\n        //the SeekBar calls this method when its value is changed.\n        //this method should get current hole value, and pull score info from csv file (or preferably the game object) and update it\n        //below is an example on how to change the scores\n        for (int i = 0; i < scorecard.getChildCount(); i++) {\n            TextView score = scorecard.getChildAt(i).findViewById(R.id.scorecardRowPlayerScore);\n\n            //here, you will fetch scores from csv and update appropriately\n            score.setText(setScore(currentHole, i));\n        }\n    }\n\n\n    private String setScore(int currentHole, int player) {\n        String gameFile = \"\";\n\n        if(currentHole < Game.currentGame.getNumHoles()) {\n            if(currentHole > Game.currentGame.getCurrentHole())\n                return \"N/A\";\n\n            int[] playerScores = Game.currentGame.getPlayerScores().get(currentHole-1);\n\n            if (playerScores[player] != Integer.MIN_VALUE)\n                return playerScores[player] + \"\";\n            else\n                return \"N/A\";\n        }\n        //for the \"total\" page\n        else {\n            int total = 0;\n\n            for(int i = 0; i < Game.currentGame.getNumHoles()-1; i++){\n                int[] playerScores = Game.currentGame.getPlayerScores().get(i);\n\n                if (playerScores[player] != Integer.MIN_VALUE)\n                    total += playerScores[player];\n            }\n            return total+\"\";\n        }\n\n//        try {\n//            String lines = \"\";\n//            FileInputStream fileInputStream = openFileInput(filename);\n//            InputStreamReader inputStreamReader = new InputStreamReader(fileInputStream);\n//            StringBuilder stringBuffer = new StringBuilder();\n//            BufferedReader bufferedReader = new BufferedReader((inputStreamReader));\n//\n//            while ((lines = bufferedReader.readLine()) != null)\n//                stringBuffer.append(lines).append(\"\\n\");\n//\n//            Log.d(TAG, \"setScore:\" + stringBuffer.toString());\n//            inputStreamReader.close();\n//            gameFile = stringBuffer.toString();\n//\n//        }\n//        catch (IOException e) { e.printStackTrace(); }\n//\n//        String[] finder = gameFile.split(\"\\n\"); //parses the csv and grabs the number hole it is looking for\n//\n//        if (currentHole >= finder.length && (currentHole > Game.currentGame.getNumHoles())) {\n//            int total = 0;\n//            for(int i = 1; i < finder.length; i++) {\n//                String score = finder[i];\n//                String[] stuff = score.split(\",\");\n//                int scoreValue = Integer.parseInt(stuff[1]);\n//                total += scoreValue;\n//            }\n//            return String.valueOf(total);\n//        }\n//\n//        if (currentHole >= finder.length)\n//            return \"N/A\";\n//\n//        String score = finder[currentHole];\n//        String[] stuff = score.split(\",\");\n//        Log.d(TAG, \"number Being inputted:\" + currentHole);\n//        Log.d(TAG, \"The line there:\" + finder[currentHole]);\n//        score = stuff[1];\n//        Log.d(TAG, \"The val that is being returned:\" + score);\n//        return score;\n    }\n\n    //initial population of scorecard\n    public void populateScoreCardView() {\n        LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n        params.setMargins(0, 0, 0, 25);\n\n        for (int i = 0; i < players.size(); i++) {\n            View examplePlayerRow = View.inflate(this, R.layout.scorecard_row, null);\n            CircleImageView playerProfile = examplePlayerRow.findViewById(R.id.scorecardRowPlayerImageView);\n            playerProfile.setImageDrawable(players.get(i).getPlayerProfileImage());\n            TextView playerName = examplePlayerRow.findViewById(R.id.scorecardRowPlayerName);\n            TextView playerScore = examplePlayerRow.findViewById(R.id.scorecardRowPlayerScore);\n\n            if (i == 0)\n                params.setMargins(0, 20, 0, 25);\n\n            playerName.setText(\" \" + players.get(i).getName());\n            playerScore.setText(\"N/A\");\n            scorecard.addView(examplePlayerRow, params);\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/minigolfapp/ScoreCardActivity.java	(revision be26a5dcbaa90984c4746d17f57e7f39407f7921)
+++ app/src/main/java/com/example/minigolfapp/ScoreCardActivity.java	(date 1616622310000)
@@ -12,11 +12,6 @@
 import android.widget.LinearLayout;
 import android.widget.SeekBar;
 import android.widget.TextView;
-
-import java.io.BufferedReader;
-import java.io.FileInputStream;
-import java.io.IOException;
-import java.io.InputStreamReader;
 import java.util.ArrayList;
 
 import de.hdodenhof.circleimageview.CircleImageView;
@@ -136,16 +131,16 @@
     private String setScore(int currentHole, int player) {
         String gameFile = "";
 
-        if(currentHole < Game.currentGame.getNumHoles()) {
+        if(currentHole <= Game.currentGame.getNumHoles()) {
             if(currentHole > Game.currentGame.getCurrentHole())
-                return "N/A";
+                return "--";
 
             int[] playerScores = Game.currentGame.getPlayerScores().get(currentHole-1);
 
             if (playerScores[player] != Integer.MIN_VALUE)
                 return playerScores[player] + "";
             else
-                return "N/A";
+                return "--";
         }
         //for the "total" page
         else {
Index: app/src/main/java/com/example/minigolfapp/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.minigolfapp;\n\nimport android.graphics.drawable.Drawable;\n\nimport java.util.ArrayList;\n\npublic class Player {\n\n    private static int currentID = 0;\n    private final int playerID;\n    private Drawable playerProfileImage;\n    private String name;\n\n    //just for demo purposes until we have save functionality\n    static ArrayList<Player> players = new ArrayList<>();\n\n    public Player(String name) {\n        this.name = name;\n        playerID = currentID + 1;\n    }\n\n    public Player(String name, Drawable playerProfileImage) {\n        this.name = name;\n        this.playerProfileImage = playerProfileImage;\n        playerID = currentID + 1;\n    }\n\n    public int getPlayerID() {\n        return playerID;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public Drawable getPlayerProfileImage() {\n        return playerProfileImage;\n    }\n\n    public void setPlayerProfileImage(Drawable playerProfileImage) {\n        this.playerProfileImage = playerProfileImage;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        Player p = (Player)o;\n        return (this.getPlayerID() == p.playerID);\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/minigolfapp/Player.java	(revision be26a5dcbaa90984c4746d17f57e7f39407f7921)
+++ app/src/main/java/com/example/minigolfapp/Player.java	(date 1616617744000)
@@ -6,7 +6,7 @@
 
 public class Player {
 
-    private static int currentID = 0;
+    private static final int currentID = 0;
     private final int playerID;
     private Drawable playerProfileImage;
     private String name;
